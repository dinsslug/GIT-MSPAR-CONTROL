<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="clr-namespace:Nemont.WPF.Service"
    xmlns:c="clr-namespace:Nemont.WPF.Controls"
    xmlns:cex="clr-namespace:Nemont.WPF.Controls.Explorer"
    x:Class="Nemont.WPF.Themes.Style.ExplorerView">
    <s:IconConverter x:Key="IconConverter" />
    <s:StatusIconConverter x:Key="StatusIconConverter" />
    <s:MarginConverter x:Key="MarginConverter" />
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="White"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="Black"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="Black"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="Black"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="White"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF262626"/>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <EventSetter Event="MouseDoubleClick" Handler="ToggleButton_MouseDoubleClick" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}"
                              Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                              Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type c:ExplorerViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <!--<Setter Property="ToolTip" Value="{Binding ToolTip}" />-->
        <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded, Mode=TwoWay}"/>
        <Setter Property="IsSelected" Value="{Binding IsNodeSelected, Mode=TwoWay}"/>
        <Setter Property="Visibility" Value="{Binding Visibility}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Contained" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ExplorerViewItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="PART_Content" Grid.ColumnSpan="2">
                            <Grid Margin="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}, Converter={StaticResource MarginConverter}}">
                                <Border x:Name="Bd" />
                                <Border x:Name="Cover">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="Black" />
                                            <Setter Property="Opacity" Value="0" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value="0.1" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ElementName=BdHeader, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Opacity" Value="0.1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </Grid>
                            <Border x:Name="BdHeader" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="19,0,0,0" />
                            </Border>
                        </Grid>
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Row="1" Margin="19,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0"/>
        <Setter Property="Padding" Value="0,1"/>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StatusModeImage" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="-9,0,0,0" />
        <Setter Property="Source" Value="{Binding Status, Converter={StaticResource StatusIconConverter}}" />
    </Style>
    <HierarchicalDataTemplate DataType="{x:Type cex:EvFolder}" ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal" Margin="4,0,3,0">
            <Image Style="{StaticResource StatusModeImage}" />
            <Image x:Name="icon" Source="{Binding IconClosedUri, Converter={StaticResource IconConverter}}" Width="16" Height="16" />
            <TextBlock Text="{Binding Name}" FontWeight="{Binding FontWeight}" Margin="4,0,0,0" VerticalAlignment="Center" />
        </StackPanel>
        <HierarchicalDataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=HasItems}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="icon" Property="Source" Value="{Binding IconOpenedUri, Converter={StaticResource IconConverter}}"/>
            </MultiDataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>
    <DataTemplate DataType="{x:Type cex:EvItem}">
        <StackPanel Orientation="Horizontal" Margin="4,0,3,0">
            <Image Style="{StaticResource StatusModeImage}" />
            <Image Source="{Binding IconUri, Converter={StaticResource IconConverter}}" Width="16" Height="16" />
            <TextBlock Text="{Binding Name}" FontWeight="{Binding FontWeight}" Margin="4,0,0,0" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>
    <Style TargetType="{x:Type c:ExplorerView}" BasedOn="{StaticResource {x:Type TreeView}}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Contained" />
    </Style>
</ResourceDictionary>